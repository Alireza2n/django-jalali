{"name":"Django-jalali","body":"Django Jalali\r\n=============\r\nThis module gives you a DateField same as Django's DateField but you can get and query data based on Jalali Date\r\n\r\nDependencies\r\n------------\r\n* [jdatetime](http://pypi.python.org/pypi/jdatetime/)\r\n* [Django](https://www.djangoproject.com/)\r\n\r\nInstall\r\n-------\r\n\r\n```\r\neasy_install django_jalali\r\n```\r\n\r\nUsage\r\n-----\r\n\r\n### Direct Usage\r\n\r\n1. Run : \r\n\r\n```\r\n$ django-admin.py startproject jalali_test\r\n```\r\n\r\n2. Start your app :\r\n\r\n```\r\n    $ python manage.py startapp foo\r\n```\r\n\r\n3. Edit settings.py and add django_jalali and your foo to your INSTALLED_APPS (also config DATABASES setting)\r\n\r\n4. Edit foo/models.py \r\n\r\n```python\r\nfrom django.db import models                                                                                                                          \r\nfrom django_jalali.db import models as jmodels\r\n\r\nclass Bar(models.Model):\r\n    objects = jmodels.jManager()\r\n    name =  models.CharField(max_length=200)\r\n    date =  jmodels.jDateField()\r\n    def __str__(self):\r\n        return \"%s, %s\"%(self.name, self.date)\r\nclass BarTime(models.Model):\r\n    objects = jmodels.jManager()\r\n    name =  models.CharField(max_length=200)\r\n    datetime = jmodels.jDateTimeField()\r\n    def __str__(self):\r\n        return \"%s, %s\" %(self.name, self.datetime)\r\n```\r\n\r\n5. Run \r\n\r\n```\r\n$ python manage.py syncdb\r\n```\r\n\r\n6. Test it\r\n\r\n```python\r\n$ python manage.py shell\r\nPython 2.6.6 (r266:84292, Sep 15 2010, 15:52:39) \r\n[GCC 4.4.5] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n(InteractiveConsole)\r\n>>> from foo.models import Bar\r\n>>> import jdatetime\r\n>>> today = jdatetime.date(1390, 5, 12)\r\n>>> mybar = Bar(name=\"foo\", date=today)\r\n>>> mybar.save()\r\n>>> mybar.date\r\njdatetime.date(1390, 5, 12)\r\n>>> Bar.objects.filter(date=today)\r\n[<Bar: foo, 1390-05-12>]\r\n>>> Bar.objects.filter(date__gte=\"1390-5-12\")\r\n[<Bar: foo, 1390-05-12>]\r\n>>> Bar.objects.filter(date='1363-08-01')\r\n[]\r\n>>> from foo.models import BarTime\r\n>>> BarTime(name=\"Bar Time now\", datetime=jdatetime.datetime(1380,8,2,12,12,12)).save()\r\n>>> BarTime.objects.filter(datetime__lt= jdatetime.datetime(1380,8,2,12,12,12 ))\r\n[]\r\n>>> BarTime.objects.filter(datetime__lte= jdatetime.datetime(1380,8,2,12,12,12 ))\r\n[<BarTime: Bar Time now, 1380-08-0212:12:12>]\r\n>>> BarTime.objects.filter(datetime__gt='1380-08-02')\r\n[<BarTime: Bar Time now, 1380-08-0212:12:12>]\r\n>>> BarTime.objects.filter(datetime__gt=d)\r\n[]\r\n>>> BarTime.objects.filter(datetime__year=1380)\r\n[<BarTime: Bar Time now, 1380-08-0212:12:12>]\r\n```\r\n\r\n### Admin Interface \r\n\r\n1. Create foo/admin.py\r\n\r\n```python\r\nfrom foo.models import Bar,BarTime\r\nfrom django.contrib import admin\r\nimport django_jalali.admin.filterspecs #you need to import this for adding filter in admin interface\r\nimport django_jalali.admin as jadmin #you need import this for adding jalali calander widget\r\n\r\nclass BarAdmin(admin.ModelAdmin):\r\n    list_filter = ['date']\r\n\r\nadmin.site.register(Bar, BarAdmin)\r\n\r\nclass BarTimeAdmin(admin.ModelAdmin):\r\n    list_filter = ['datetime']\r\n\r\nadmin.site.register(BarTime, BarTimeAdmin)\r\n```\r\n\r\n2. Config admin interface and fire up your django and enjoy using jalali date !\r\n","tagline":"Jalali DateField support for Django model","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}